// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.API.Data;

namespace SmartSchool.API.Data.Migrations
{
    [DbContext(typeof(SmartSchoolContext))]
    [Migration("20200827165220_InitialConfiguration")]
    partial class InitialConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchool.API.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFimMatricula")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicioMatricula")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Matricula")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 628, DateTimeKind.Local).AddTicks(2923),
                            DataNascimento = new DateTime(2000, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1,
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Telefone = "+551122223333"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3289),
                            DataNascimento = new DateTime(2000, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 2,
                            Nome = "Paula",
                            Sobrenome = "Isabela",
                            Telefone = "+551133334444"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3362),
                            DataNascimento = new DateTime(2002, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 3,
                            Nome = "Laura",
                            Sobrenome = "Antonia",
                            Telefone = "+551144445555"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3374),
                            DataNascimento = new DateTime(1998, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 4,
                            Nome = "Luiza",
                            Sobrenome = "Maria",
                            Telefone = "+551155556666"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3379),
                            DataNascimento = new DateTime(2001, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 5,
                            Nome = "Lucas",
                            Sobrenome = "Machado",
                            Telefone = "+551166667777"
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3390),
                            DataNascimento = new DateTime(2003, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 6,
                            Nome = "Pedro",
                            Sobrenome = "Alvares",
                            Telefone = "+551177778888"
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            DataInicioMatricula = new DateTime(2020, 8, 27, 13, 52, 19, 629, DateTimeKind.Local).AddTicks(3395),
                            DataNascimento = new DateTime(2005, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 7,
                            Nome = "Paulo",
                            Sobrenome = "José",
                            Telefone = "+551188889999"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.AlunoCurso", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("AlunosCursos");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5145)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5709)
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5731)
                        },
                        new
                        {
                            AlunoId = 4,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5733)
                        },
                        new
                        {
                            AlunoId = 5,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5735)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5736)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5738)
                        },
                        new
                        {
                            AlunoId = 1,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5739)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5740)
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5742)
                        },
                        new
                        {
                            AlunoId = 4,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5743)
                        },
                        new
                        {
                            AlunoId = 5,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5745)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5746)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5747)
                        },
                        new
                        {
                            AlunoId = 1,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5749)
                        },
                        new
                        {
                            AlunoId = 2,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5750)
                        },
                        new
                        {
                            AlunoId = 3,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5752)
                        },
                        new
                        {
                            AlunoId = 4,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5753)
                        },
                        new
                        {
                            AlunoId = 5,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5754)
                        },
                        new
                        {
                            AlunoId = 6,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5756)
                        },
                        new
                        {
                            AlunoId = 7,
                            CursoId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(5757)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nota")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(3382)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4052)
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4073)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4076)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4078)
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4082)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4083)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4085)
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4087)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4090)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4091)
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4093)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4094)
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4096)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4097)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4099)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4100)
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4103)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 1,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4105)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 2,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4106)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4108)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4109)
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5,
                            DataInicio = new DateTime(2020, 8, 27, 13, 52, 19, 631, DateTimeKind.Local).AddTicks(4111)
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreRequisitoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PreRequisitoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargaHoraria = 200,
                            CursoId = 1,
                            Nome = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CargaHoraria = 400,
                            CursoId = 3,
                            Nome = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CargaHoraria = 450,
                            CursoId = 3,
                            Nome = "Física",
                            PreRequisitoId = 2,
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 4,
                            CargaHoraria = 100,
                            CursoId = 1,
                            Nome = "Português",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 5,
                            CargaHoraria = 150,
                            CursoId = 1,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 6,
                            CargaHoraria = 150,
                            CursoId = 2,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 7,
                            CargaHoraria = 250,
                            CursoId = 3,
                            Nome = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 8,
                            CargaHoraria = 480,
                            CursoId = 1,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 9,
                            CargaHoraria = 420,
                            CursoId = 2,
                            Nome = "Programação",
                            ProfessorId = 5
                        },
                        new
                        {
                            Id = 10,
                            CargaHoraria = 420,
                            CursoId = 3,
                            Nome = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataFimRegistro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicioRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Registro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataInicioRegistro = new DateTime(2020, 8, 27, 13, 52, 19, 630, DateTimeKind.Local).AddTicks(5888),
                            Nome = "Lauro",
                            Registro = 1,
                            Sobrenome = "Oliveira"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataInicioRegistro = new DateTime(2020, 8, 27, 13, 52, 19, 630, DateTimeKind.Local).AddTicks(7180),
                            Nome = "Roberto",
                            Registro = 2,
                            Sobrenome = "Soares"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            DataInicioRegistro = new DateTime(2020, 8, 27, 13, 52, 19, 630, DateTimeKind.Local).AddTicks(7228),
                            Nome = "Ronaldo",
                            Registro = 3,
                            Sobrenome = "Marconi"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            DataInicioRegistro = new DateTime(2020, 8, 27, 13, 52, 19, 630, DateTimeKind.Local).AddTicks(7230),
                            Nome = "Rodrigo",
                            Registro = 4,
                            Sobrenome = "Carvalho"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            DataInicioRegistro = new DateTime(2020, 8, 27, 13, 52, 19, 630, DateTimeKind.Local).AddTicks(7232),
                            Nome = "Alexandre",
                            Registro = 5,
                            Sobrenome = "Montanha"
                        });
                });

            modelBuilder.Entity("SmartSchool.API.Models.AlunoCurso", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Aluno", "Aluno")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Disciplina", "Disciplina")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.API.Models.Disciplina", b =>
                {
                    b.HasOne("SmartSchool.API.Models.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.API.Models.Disciplina", "PreRequisito")
                        .WithMany()
                        .HasForeignKey("PreRequisitoId");

                    b.HasOne("SmartSchool.API.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
